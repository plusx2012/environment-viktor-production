PipelineSecrets: {}
cleanup:
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --cleanup
controllerbuild:
  enabled: true
controllerworkflow:
  enabled: false
docker-registry:
  enabled: false
dockerRegistry: gcr.io
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --v
  - 4
  config:
    domain: devopstoolkitseries.com
    exposer: Ingress
    http: "true"
jenkins:
  Servers:
    Global:
      EnvVars:
        TILLER_NAMESPACE: kube-system
  enabled: false
prometheus:
  alertmanager:
    configFromSecret: alertmanager
    ingress:
      annotations:
        kubernetes.io/ingress.class: "nginx"
        certmanager.k8s.io/issuer: "letsencrypt-prod"
        certmanager.k8s.io/acme-challenge-type: http01
      enabled: true
      hosts:
      - alertmanager.dockerflow.com
      tls:
      - hosts:
        - alertmanager.dockerflow.com
        secretName: letsencrypt-secret-alertmanager
    resources:
      limits:
        cpu: 10m
        memory: 20Mi
      requests:
        cpu: 5m
        memory: 10Mi
  kubeStateMetrics:
    resources:
      limits:
        cpu: 10m
        memory: 50Mi
      requests:
        cpu: 5m
        memory: 25Mi
  nodeExporter:
    image:
      tag: v0.17.0-rc.0
  pushgateway:
    resources:
      limits:
        cpu: 10m
        memory: 20Mi
      requests:
        cpu: 5m
        memory: 10Mi
  server:
    ingress:
      annotations:
        kubernetes.io/ingress.class: "nginx"
        certmanager.k8s.io/issuer: "letsencrypt-prod"
        certmanager.k8s.io/acme-challenge-type: http01
      enabled: true
      hosts:
      - prometheus.dockerflow.com
      tls:
      - hosts:
        - prometheus.dockerflow.com
        secretName: letsencrypt-secret-prometheus
    resources:
      limits:
        cpu: 100m
        memory: 2500Mi
      requests:
        cpu: 40m
        memory: 1500Mi
  serverFiles:
    alerts:
      groups:
      - name: latency
        rules:
        - alert: AppTooSlow
          annotations:
            description: More then 5% of requests are slower than 1s
            summary: Application is too slow
          expr: sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{le="1",
            ingress!~"jenkins|prometheus-server|grafana"}[5m])) by (ingress) / sum(rate(nginx_ingress_controller_request_duration_seconds_count{ingress!~"jenkins|prometheus-server"}[5m]))
            by (ingress) < 0.95
          for: 15m
          labels:
            severity: notify
        - alert: AppTooSlowInternal
          annotations:
            description: More then 5% of requests are slower than 2.5s
            summary: Internal application is too slow
          expr: sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{le="2.5",
            ingress=~"jenkins|prometheus-server|grafana"}[5m])) by (ingress) / sum(rate(nginx_ingress_controller_request_duration_seconds_count{ingress=~"jenkins|prometheus-server"}[5m]))
            by (ingress) < 0.95
          for: 15m
          labels:
            severity: notify
        - alert: TooManyRequests
          annotations:
            description: There is more than average of 1 requests per second per replica
              for at least one application
            summary: Too many requests
          expr: sum(rate(nginx_ingress_controller_requests[5m])) by (ingress) / sum(label_join(kube_deployment_status_replicas,
            "ingress", ",", "deployment")) by (ingress) > 10
          labels:
            severity: notify
      - name: nodes
        rules:
        - alert: TooManyNodes
          annotations:
            description: The number of the nodes in the cluster increased
            summary: Cluster increased
          expr: count(kube_node_info) > 5
          for: 15m
          labels:
            severity: notify
        - alert: TooFewNodes
          annotations:
            description: The number of the nodes in the cluster decreased
            summary: Cluster decreased
          expr: count(kube_node_info) < 3
          for: 15m
          labels:
            severity: notify
      - name: errors
        rules:
        - alert: TooManyErrors
          annotations:
            description: At least one application produced more then 5% of error responses
            summary: Too many errors
          expr: sum(rate(nginx_ingress_controller_requests{status=~"5.."}[5m])) by
            (ingress) / sum(rate(nginx_ingress_controller_requests[5m])) by (ingress)
            > 0.05
          labels:
            severity: error
      - name: pods
        rules:
        - alert: ProblematicPods
          annotations:
            description: At least one Pod is in a problematic phase
            summary: Problems with Pods
          expr: sum(kube_pod_status_phase{phase=~"Failed|Unknown|Pending"}) by (phase)
            > 0
          for: 15m
          labels:
            severity: notify
        - alert: OldPods
          annotations:
            description: At least one Pod has not been updated to more than 90 days
            summary: Old Pods
          expr: (time() - kube_pod_start_time{namespace!="kube-system"}) > (60 * 60
            * 24 * 90)
          labels:
            frequency: low
            severity: notify
        - alert: ReservedMemTooLow
          annotations:
            description: At least one Pod uses much more memory than it reserved
            summary: Reserved memory is too low
          expr: sum(label_join(container_memory_usage_bytes{namespace!="kube-system",
            namespace!="ingress-nginx", container_name!=""}, "pod", ",", "pod_name"))
            by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{namespace!="kube-system"})
            by (pod) > 1.5
          for: 1h
          labels:
            frequency: low
            severity: notify
        - alert: ReservedMemTooHigh
          annotations:
            description: At least one Pod uses much less memory than it reserved
            summary: Reserved memory is too high
          expr: sum(label_join(container_memory_usage_bytes{namespace!="kube-system",
            namespace!="ingress-nginx", namespace!="cd", container_name!=""}, "pod", ",", "pod_name"))
            by (pod) / sum(kube_pod_container_resource_requests_memory_bytes{namespace!="kube-system", namespace!="cd"})
            by (pod) < 0.5 and sum(kube_pod_container_resource_requests_memory_bytes{namespace!="kube-system", namespace!="cd"})
            by (pod) > 5.25e+06
          for: 6h
          labels:
            frequency: low
            severity: notify
        - alert: ReservedCPUTooLow
          annotations:
            description: At least one Pod uses much more CPU than it reserved
            summary: Reserved CPU is too low
          expr: sum(label_join(rate(container_cpu_usage_seconds_total{namespace!="kube-system",
            container_name!="", namespace!="ingress-nginx", pod_name!=""}[5m]), "pod",
            ",", "pod_name")) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{namespace!="kube-system"})
            by (pod) > 1.5
          for: 1h
          labels:
            frequency: low
            severity: notify
        - alert: ReservedCPUTooHigh
          annotations:
            description: At least one Pod uses much less CPU than it reserved
            summary: Reserved CPU is too high
          expr: sum(label_join(rate(container_cpu_usage_seconds_total{namespace!="kube-system", namespace!="cd",
            pod_name!=""}[5m]), "pod", ",", "pod_name")) by (pod) / sum(kube_pod_container_resource_requests_cpu_cores{namespace!="kube-system",
            namespace!="ingress-nginx", namespace!="cd"}) by (pod) < 0.5 and sum(kube_pod_container_resource_requests_cpu_cores{namespace!="kube-system",
            namespace!="ingress-nginx", namespace!="cd"}) by (pod) > 0.005
          for: 6h
          labels:
            frequency: low
            severity: notify
        - alert: MemoryAtTheLimit
          annotations:
            description: At least one Pod uses memory that is close it its limit
            summary: Memory usage is almost at the limit
          expr: sum(label_join(container_memory_usage_bytes{namespace!="kube-system",
            container_name!=""}, "pod", ",", "pod_name")) by (pod) / sum(kube_pod_container_resource_limits_memory_bytes{namespace!="kube-system"})
            by (pod) > 0.8
          for: 1h
          labels:
            frequency: low
            severity: notify
prow: {}
